# HG changeset patch
# User Tobias <tbsmark86@gmail.com>
# Date 1679587163 -3600
#      Thu Mar 23 16:59:23 2023 +0100
# Node ID 4f85321295948fd237ea8a917555000fb2a66ff3
# Parent  3821cb4a2b5e4b22b0abf2b9666593d4969b4f59
HEIF: Fix reading images with rotation/transformation; added option to ignore them

diff -r 3821cb4a2b5e -r 4f8532129594 coders/heif.c
--- a/coders/heif.c	Thu Mar 23 16:11:54 2023 +0100
+++ b/coders/heif.c	Thu Mar 23 16:59:23 2023 +0100
@@ -421,6 +421,12 @@
   PixelPacket
     *q;
 
+  const char
+    *value;
+
+  MagickBool
+    ignore_transformations;
+
   assert(image_info != (const ImageInfo *) NULL);
   assert(image_info->signature == MagickSignature);
   assert(exception != (ExceptionInfo *) NULL);
@@ -444,6 +450,11 @@
   if (ReadBlob(image,in_len,in_buf) != in_len)
     ThrowHEIFReaderException(CorruptImageError, UnexpectedEndOfFile, image);
 
+  ignore_transformations = MagickFalse;
+  if ((value=AccessDefinition(image_info,"heic","ignore_transformations")))
+    if (LocaleCompare(value,"TRUE") == 0)
+      ignore_transformations = MagickTrue;
+
   /* Init HEIF-Decoder handles */
   heif=heif_context_alloc();
 
@@ -476,6 +487,8 @@
       ThrowHEIFReaderException(CorruptImageError, AnErrorHasOccurredReadingFromFile, image);
     }
 
+  // Note: Those values are preliminary but likely the upper bound
+  // The real image values might be rotated or cropped due to transformations
   image->columns=heif_image_handle_get_width(heif_image_handle);
   image->rows=heif_image_handle_get_height(heif_image_handle);
   if (heif_image_handle_has_alpha_channel(heif_image_handle))
@@ -503,7 +516,9 @@
       return NULL;
     }
 
-  if (image_info->ping)
+  // when apply transformations (the default) the whole image has to be
+  // read to get the real dimensions
+  if (image_info->ping && ignore_transformations)
     {
       image->depth = 8;
       HEIFReadCleanup();
@@ -525,7 +540,7 @@
   progress_user_data.progress = 0;
 
   /* version 1 options */
-  decode_options->ignore_transformations = 0;
+  decode_options->ignore_transformations = ignore_transformations == MagickTrue ? 1 : 0;
 #if HEIF_ENABLE_PROGRESS_MONITOR
   decode_options->start_progress = start_progress;
   decode_options->on_progress = on_progress;
@@ -560,6 +575,18 @@
       ThrowHEIFReaderException(CorruptImageError, AnErrorHasOccurredReadingFromFile, image);
     }
 
+  // update with final values, see preliminary note above
+  image->columns=heif_image_get_primary_width(heif_image);
+  image->rows=heif_image_get_primary_height(heif_image);
+
+  if (image_info->ping)
+    {
+      image->depth = 8;
+      HEIFReadCleanup();
+      CloseBlob(image);
+      return image;
+    }
+
   image->depth=heif_image_get_bits_per_pixel(heif_image, heif_channel_interleaved);
   /* the requested channel is interleaved there depth is a sum of all channels
      split it up again: */
