# HG changeset patch
# User Dirk Lemstra <dirk@imagemagick.org>
# Date 1405885618 -7200
#      Sun Jul 20 21:46:58 2014 +0200
# Node ID f8f1d47c7798de7ac7b05b326cf384c08665ccf4
# Parent  8d0aa3a36d083a9f1fd31f8b593a0817a941351f
Enable automatic linking in Visual Studio

diff --git a/Magick++/lib/Magick++/Include.h b/Magick++/lib/Magick++/Include.h
--- a/Magick++/lib/Magick++/Include.h
+++ b/Magick++/lib/Magick++/Include.h
@@ -90,16 +90,108 @@ namespace MagickLib
 #      endif
 #    endif
 #  else
 #    define MagickDLLDecl
 #    define MagickDLLDeclExtern
 #    if defined(_VISUALC_)
 #      pragma message( "Magick++ lib static interface" )
 #    endif
+#    if defined(_MSC_VER) && defined(STATIC_MAGICK) && !defined(NOAUTOLINK_MAGICK)
+#      if defined(_DEBUG)
+#        if defined(HasBZLIB)
+#          pragma comment(lib, "CORE_DB_bzlib_.lib")
+#        endif
+#        pragma comment(lib, "CORE_DB_coders_.lib")
+#        pragma comment(lib, "CORE_DB_filters_.lib")
+#        if defined(HasJBIG)
+#          pragma comment(lib, "CORE_DB_jbig_.lib")
+#        endif
+#        if defined(HasJP2)
+#          pragma comment(lib, "CORE_DB_jp2_.lib")
+#        endif
+#        if defined(HasJPEG)
+#          pragma comment(lib, "CORE_DB_jpeg_.lib")
+#        endif
+#        if defined(HasLCMS)
+#          pragma comment(lib, "CORE_DB_lcms_.lib")
+#        endif
+#        if defined(HasXML)
+#          pragma comment(lib, "CORE_DB_libxml_.lib")
+#        endif
+#        pragma comment(lib, "CORE_DB_magick_.lib")
+#        pragma comment(lib, "CORE_DB_Magick++_.lib")
+#        if defined(HasPNG)
+#          pragma comment(lib, "CORE_DB_png_.lib")
+#        endif
+#        if defined(HasTIFF)
+#          pragma comment(lib, "CORE_DB_tiff_.lib")
+#        endif
+#        if defined(HasTTF)
+#          pragma comment(lib, "CORE_DB_ttf_.lib")
+#        endif
+#        pragma comment(lib, "CORE_DB_wand_.lib")
+#        if defined(HasWMFlite)
+#          pragma comment(lib, "CORE_DB_wmf_.lib")
+#        endif
+#        if defined(HasX11)
+#          pragma comment(lib, "CORE_DB_xlib_.lib")
+#        endif
+#        if defined(HasZLIB)
+#          pragma comment(lib, "CORE_DB_zlib_.lib")
+#        endif
+#      else
+#        if defined(HasBZLIB)
+#          pragma comment(lib, "CORE_RL_bzlib_.lib")
+#        endif
+#        pragma comment(lib, "CORE_RL_coders_.lib")
+#        pragma comment(lib, "CORE_RL_filters_.lib")
+#        if defined(HasJBIG)
+#          pragma comment(lib, "CORE_RL_jbig_.lib")
+#        endif
+#        if defined(HasJP2)
+#          pragma comment(lib, "CORE_RL_jp2_.lib")
+#        endif
+#        if defined(HasJPEG)
+#          pragma comment(lib, "CORE_RL_jpeg_.lib")
+#        endif
+#        if defined(HasLCMS)
+#          pragma comment(lib, "CORE_RL_lcms_.lib")
+#        endif
+#        if defined(HasXML)
+#          pragma comment(lib, "CORE_RL_libxml_.lib")
+#        endif
+#        pragma comment(lib, "CORE_RL_magick_.lib")
+#        pragma comment(lib, "CORE_RL_Magick++_.lib")
+#        if defined(HasPNG)
+#          pragma comment(lib, "CORE_RL_png_.lib")
+#        endif
+#        if defined(HasTIFF)
+#          pragma comment(lib, "CORE_RL_tiff_.lib")
+#        endif
+#        if defined(HasTTF)
+#          pragma comment(lib, "CORE_RL_ttf_.lib")
+#        endif
+#        pragma comment(lib, "CORE_RL_wand_.lib")
+#        if defined(HasWMFlite)
+#          pragma comment(lib, "CORE_RL_wmf_.lib")
+#        endif
+#        if defined(HasX11)
+#          pragma comment(lib, "CORE_RL_xlib_.lib")
+#        endif
+#        if defined(HasZLIB)
+#          pragma comment(lib, "CORE_RL_zlib_.lib")
+#        endif
+#      endif
+#      if defined(_WIN32_WCE)
+#        pragma comment(lib, "wsock32.lib")
+#      else
+#        pragma comment(lib, "ws2_32.lib")
+#      endif
+#    endif
 #  endif
 #else
 #  define MagickDLLDecl
 #  define MagickDLLDeclExtern
 #endif
 
 #if defined(WIN32) && defined(_VISUALC_)
 #  pragma warning(disable : 4996) /* function deprecation warnings */
@@ -241,16 +333,140 @@ namespace Magick
 
   // Endian options
   using MagickLib::EndianType;
   using MagickLib::UndefinedEndian;
   using MagickLib::LSBEndian;
   using MagickLib::MSBEndian;
   using MagickLib::NativeEndian;
 
+  // Exception types
+  using MagickLib::ExceptionType;
+  using MagickLib::UndefinedException;
+  using MagickLib::EventException;
+  using MagickLib::ExceptionEvent;
+  using MagickLib::ResourceEvent;
+  using MagickLib::ResourceLimitEvent;
+  using MagickLib::TypeEvent;
+  using MagickLib::AnnotateEvent;
+  using MagickLib::OptionEvent;
+  using MagickLib::DelegateEvent;
+  using MagickLib::MissingDelegateEvent;
+  using MagickLib::CorruptImageEvent;
+  using MagickLib::FileOpenEvent;
+  using MagickLib::BlobEvent;
+  using MagickLib::StreamEvent;
+  using MagickLib::CacheEvent;
+  using MagickLib::CoderEvent;
+  using MagickLib::ModuleEvent;
+  using MagickLib::DrawEvent;
+  using MagickLib::RenderEvent;
+  using MagickLib::ImageEvent;
+  using MagickLib::WandEvent;
+  using MagickLib::TemporaryFileEvent;
+  using MagickLib::TransformEvent;
+  using MagickLib::XServerEvent;
+  using MagickLib::X11Event;
+  using MagickLib::UserEvent;
+  using MagickLib::MonitorEvent;
+  using MagickLib::LocaleEvent;
+  using MagickLib::DeprecateEvent;
+  using MagickLib::RegistryEvent;
+  using MagickLib::ConfigureEvent;
+  using MagickLib::WarningException;
+  using MagickLib::ExceptionWarning;
+  using MagickLib::ResourceWarning;
+  using MagickLib::ResourceLimitWarning;
+  using MagickLib::TypeWarning;
+  using MagickLib::AnnotateWarning;
+  using MagickLib::OptionWarning;
+  using MagickLib::DelegateWarning;
+  using MagickLib::MissingDelegateWarning;
+  using MagickLib::CorruptImageWarning;
+  using MagickLib::FileOpenWarning;
+  using MagickLib::BlobWarning;
+  using MagickLib::StreamWarning;
+  using MagickLib::CacheWarning;
+  using MagickLib::CoderWarning;
+  using MagickLib::ModuleWarning;
+  using MagickLib::DrawWarning;
+  using MagickLib::RenderWarning;
+  using MagickLib::ImageWarning;
+  using MagickLib::WandWarning;
+  using MagickLib::TemporaryFileWarning;
+  using MagickLib::TransformWarning;
+  using MagickLib::XServerWarning;
+  using MagickLib::X11Warning;
+  using MagickLib::UserWarning;
+  using MagickLib::MonitorWarning;
+  using MagickLib::LocaleWarning;
+  using MagickLib::DeprecateWarning;
+  using MagickLib::RegistryWarning;
+  using MagickLib::ConfigureWarning;
+  using MagickLib::ErrorException;
+  using MagickLib::ExceptionError;
+  using MagickLib::ResourceError;
+  using MagickLib::ResourceLimitError;
+  using MagickLib::TypeError;
+  using MagickLib::AnnotateError;
+  using MagickLib::OptionError;
+  using MagickLib::DelegateError;
+  using MagickLib::MissingDelegateError;
+  using MagickLib::CorruptImageError;
+  using MagickLib::FileOpenError;
+  using MagickLib::BlobError;
+  using MagickLib::StreamError;
+  using MagickLib::CacheError;
+  using MagickLib::CoderError;
+  using MagickLib::ModuleError;
+  using MagickLib::DrawError;
+  using MagickLib::RenderError;
+  using MagickLib::ImageError;
+  using MagickLib::WandError;
+  using MagickLib::TemporaryFileError;
+  using MagickLib::TransformError;
+  using MagickLib::XServerError;
+  using MagickLib::X11Error;
+  using MagickLib::UserError;
+  using MagickLib::MonitorError;
+  using MagickLib::LocaleError;
+  using MagickLib::DeprecateError;
+  using MagickLib::RegistryError;
+  using MagickLib::ConfigureError;
+  using MagickLib::FatalErrorException;
+  using MagickLib::ExceptionFatalError;
+  using MagickLib::ResourceFatalError;
+  using MagickLib::ResourceLimitFatalError;
+  using MagickLib::TypeFatalError;
+  using MagickLib::AnnotateFatalError;
+  using MagickLib::OptionFatalError;
+  using MagickLib::DelegateFatalError;
+  using MagickLib::MissingDelegateFatalError;
+  using MagickLib::CorruptImageFatalError;
+  using MagickLib::FileOpenFatalError;
+  using MagickLib::BlobFatalError;
+  using MagickLib::StreamFatalError;
+  using MagickLib::CacheFatalError;
+  using MagickLib::CoderFatalError;
+  using MagickLib::ModuleFatalError;
+  using MagickLib::DrawFatalError;
+  using MagickLib::RenderFatalError;
+  using MagickLib::ImageFatalError;
+  using MagickLib::WandFatalError;
+  using MagickLib::TemporaryFileFatalError;
+  using MagickLib::TransformFatalError;
+  using MagickLib::XServerFatalError;
+  using MagickLib::X11FatalError;
+  using MagickLib::UserFatalError;
+  using MagickLib::MonitorFatalError;
+  using MagickLib::LocaleFatalError;
+  using MagickLib::DeprecateFatalError;
+  using MagickLib::RegistryFatalError;
+  using MagickLib::ConfigureFatalError;
+
   // Fill rules
   using MagickLib::FillRule;
   using MagickLib::UndefinedRule;
   using MagickLib::EvenOddRule;
   using MagickLib::NonZeroRule;
   
   // Filter types
   using MagickLib::FilterTypes;
@@ -347,16 +563,17 @@ namespace Magick
   using MagickLib::PaintMethod;
   using MagickLib::PointMethod;
   using MagickLib::ReplaceMethod;
   using MagickLib::FloodfillMethod;
   using MagickLib::FillToBorderMethod;
   using MagickLib::ResetMethod;
 
   // Arithmetic and bitwise operators
+  using MagickLib::UndefinedQuantumOp;
   using MagickLib::AddQuantumOp;
   using MagickLib::AndQuantumOp;
   using MagickLib::AssignQuantumOp;
   using MagickLib::DivideQuantumOp;
   using MagickLib::LShiftQuantumOp;
   using MagickLib::MultiplyQuantumOp;
   using MagickLib::OrQuantumOp;
   using MagickLib::RShiftQuantumOp;
@@ -464,16 +681,17 @@ namespace Magick
   // ImageStatistics type
   using MagickLib::ImageStatistics;
 
   // StorageType type
   using MagickLib::StorageType;
   using MagickLib::CharPixel;
   using MagickLib::ShortPixel;
   using MagickLib::IntegerPixel;
+  using MagickLib::LongPixel;
   using MagickLib::FloatPixel;
   using MagickLib::DoublePixel;
 
   // StretchType type
   using MagickLib::StretchType;
   using MagickLib::NormalStretch;
   using MagickLib::UltraCondensedStretch;
   using MagickLib::ExtraCondensedStretch;
@@ -503,16 +721,24 @@ namespace Magick
   using MagickLib::ResourceType;
   using MagickLib::DiskResource;
   using MagickLib::FileResource;
   using MagickLib::MapResource;
   using MagickLib::MemoryResource;
   using MagickLib::PixelsResource;
   using MagickLib::ThreadsResource;
 
+  // Virtual pixel methods
+  using MagickLib::VirtualPixelMethod;
+  using MagickLib::UndefinedVirtualPixelMethod;
+  using MagickLib::ConstantVirtualPixelMethod;
+  using MagickLib::EdgeVirtualPixelMethod;
+  using MagickLib::MirrorVirtualPixelMethod;
+  using MagickLib::TileVirtualPixelMethod;
+
 #if defined(MAGICK_IMPLEMENTATION)
   //
   // GraphicsMagick symbols used in implementation code
   //
   using MagickLib::AccessDefinition;
   using MagickLib::AccessImmutableIndexes;
   using MagickLib::AccessMutableIndexes;
   using MagickLib::AcquireCacheViewPixels;
@@ -672,17 +898,16 @@ namespace Magick
   using MagickLib::DrawSkewY;
   using MagickLib::DrawTranslate;
   using MagickLib::DrawWarning;
   using MagickLib::EdgeImage;
   using MagickLib::EmbossImage;
   using MagickLib::EnhanceImage;
   using MagickLib::EqualizeImage;
   using MagickLib::ExceptionInfo;
-  using MagickLib::ExceptionType;
   using MagickLib::ExecuteModuleProcess;
   using MagickLib::ExportImagePixelArea;
   using MagickLib::FileOpenError;
   using MagickLib::FileOpenFatalError;
   using MagickLib::FileOpenWarning;
   using MagickLib::FlattenImages;
   using MagickLib::FlipImage;
   using MagickLib::FlopImage;
