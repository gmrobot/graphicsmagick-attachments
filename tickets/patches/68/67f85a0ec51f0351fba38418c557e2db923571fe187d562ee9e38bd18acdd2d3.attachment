# HG changeset patch
# User pacien <pacien.trangirard@pacien.net>
# Date 1670453613 -3600
#      Wed Dec 07 23:53:33 2022 +0100
# Node ID b27f95f179642e88ab664e5aadfdcbd53e420df2
# Parent  2951f07d70af350a356ef7237665c8fe3937569a
# EXP-Topic identify_auto_orient
Add -auto-orient support to 'identify'

This allows taking the orientation metadata into account when retrieving the
dimensions of an image using the 'identify' subcommand.

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,9 @@
+2022-12-07  Pacien TRAN-GIRARD  <pacien.trangirard@pacien.net>
+
+        * magick/command.c (IdentifyImageCommand): Add -auto-orient
+        support to 'identify'.  This takes the orientation metadata into
+        account when reporting the dimensions of an image.
+
 2022-12-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>
 
 	* utilities/tests/convert.tap: Produce more interesting 'info'
diff --git a/doc/options.imdoc b/doc/options.imdoc
--- a/doc/options.imdoc
+++ b/doc/options.imdoc
@@ -180,7 +180,7 @@ encryption.  Encrypting images being wri
 
 <!-- ------------ -auto-orient ------------------------------------- -->
 
-<utils apps=compare,convert,mogrify>
+<utils apps=compare,convert,identify,mogrify>
 <dopt>-auto-orient</opt>
 
 <abs>orient (rotate) image so it is upright</abs>
diff --git a/magick/command.c b/magick/command.c
--- a/magick/command.c
+++ b/magick/command.c
@@ -8402,6 +8402,9 @@ MagickExport MagickPassFail IdentifyImag
   unsigned int
     ping;
 
+  MagickBool
+    auto_orient = MagickFalse;
+
   MagickPassFail
     status = MagickPass;
 
@@ -8492,10 +8495,22 @@ MagickExport MagickPassFail IdentifyImag
                   break;
                 }
             }
-        if (image_info->verbose || !ping)
+        if (image_info->verbose || !ping || auto_orient)
           image=ReadImage(image_info,exception);
         else
           image=PingImage(image_info,exception);
+        if (auto_orient && image != (Image *) NULL)
+          {
+            Image
+              *orient_image;
+
+            orient_image=AutoOrientImage(image,image->orientation,exception);
+            if (orient_image != (Image *) NULL)
+              {
+                DestroyImage(image);
+                image=orient_image;
+              }
+          }
         status&=image != (Image *) NULL;
         if (image == (Image *) NULL)
           {
@@ -8535,6 +8550,15 @@ MagickExport MagickPassFail IdentifyImag
       }
     switch(*(option+1))
     {
+      case 'a':
+      {
+        if (LocaleCompare("auto-orient",option+1) == 0)
+          {
+            auto_orient = MagickTrue;
+            break;
+          }
+        ThrowIdentifyException(OptionError,UnrecognizedOption,option)
+      }
       case 'd':
       {
         if (LocaleCompare("debug",option+1) == 0)
@@ -8796,6 +8820,7 @@ static void IdentifyUsage(void)
                 GetClientName());
   (void) puts("");
   (void) puts("Where options include:");
+  (void) puts("  -auto-orient         orient (rotate) images so they are upright");
   (void) puts("  -debug events        display copious debugging information");
   (void) puts("  -define values       Coder/decoder specific options");
   (void) puts("  -density geometry    horizontal and vertical density of the image");
diff --git a/utilities/gm.1 b/utilities/gm.1
--- a/utilities/gm.1
+++ b/utilities/gm.1
@@ -9647,6 +9647,9 @@ Options, above.
 .B "-authenticate \fI<string>"\fP
 \fRdecrypt image with this password
 .TP
+.B "-auto-orient"
+\fRorient (rotate) image so it is upright
+.TP
 .B "-debug \fI<events>"\fP
 \fRenable debug printout
 .TP
