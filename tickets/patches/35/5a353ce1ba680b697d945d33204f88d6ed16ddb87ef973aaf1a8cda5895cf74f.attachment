# HG changeset patch
# User Dirk Lemstra <dirk@imagemagick.org>
# Date 1405767730 -7200
#      Sat Jul 19 13:02:10 2014 +0200
# Node ID 4320e56cda25d8baa48c58f7773a299bfa8ff832
# Parent  ac9735c572a2712b2a1267c0fec1fdac1c50ba83
Fixes for building in 64bit under Windows.

diff --git a/Magick++/lib/Magick++/Include.h b/Magick++/lib/Magick++/Include.h
--- a/Magick++/lib/Magick++/Include.h
+++ b/Magick++/lib/Magick++/Include.h
@@ -41,17 +41,17 @@ namespace MagickLib
 
 #undef class
 }
 
 //
 // Provide appropriate DLL imports/exports for Visual C++,
 // Borland C++Builder and MinGW builds.
 //
-#if defined(WIN32) && !defined(__CYGWIN__) //&& !defined(__MINGW32__)
+#if (defined(WIN32) || defined(WIN64)) && !defined (__CYGWIN__) //&& !defined(__MINGW32__)
 # define MagickCplusPlusDLLSupported
 #endif
 #if defined(MagickCplusPlusDLLSupported)
 #  if defined(_MT) && defined(_DLL) && !defined(_LIB) && !defined(STATIC_MAGICK)
 //
 // In a native Windows build, the following defines are used:
 //
 //   _MT         = Multithreaded
@@ -96,17 +96,17 @@ namespace MagickLib
 #      pragma message( "Magick++ lib static interface" )
 #    endif
 #  endif
 #else
 #  define MagickDLLDecl
 #  define MagickDLLDeclExtern
 #endif
 
-#if defined(WIN32) && defined(_VISUALC_)
+#if (defined(WIN32) || defined(WIN64)) && defined(_VISUALC_)
 #  pragma warning(disable : 4996) /* function deprecation warnings */
 #endif
 
 #if defined(MAGICK_IMPLEMENTATION)
 namespace MagickLib
 {
 #  include "magick/enum_strings.h"
 }
diff --git a/VisualMagick/configure/configure.cpp b/VisualMagick/configure/configure.cpp
--- a/VisualMagick/configure/configure.cpp
+++ b/VisualMagick/configure/configure.cpp
@@ -5012,17 +5012,21 @@ void ConfigureVS7Project::write_cpp_comp
     case 1:
       m_stream << "_DEBUG";
       break;
     }
   if (bConsoleMode&& (type == EXEPROJECT))
     m_stream << ";_CONSOLE";
   else
     m_stream << ";_WINDOWS";
-  m_stream << ";WIN32;_VISUALC_;NeedFunctionPrototypes";
+  if (build64Bit)
+    m_stream << ";WIN64";
+  else
+    m_stream << ";WIN32";
+  m_stream << ";_VISUALC_;NeedFunctionPrototypes";
   {
     for (
          list<string>::iterator it = defines_list.begin();
          it != defines_list.end();
          it++)
       {
         m_stream << ";" << (*it).c_str();
       }
diff --git a/bzlib/bzlib.h b/bzlib/bzlib.h
--- a/bzlib/bzlib.h
+++ b/bzlib/bzlib.h
@@ -65,17 +65,17 @@ typedef
    } 
    bz_stream;
 
 #ifndef BZ_NO_STDIO
 /* Need a definitition for FILE */
 #include <stdio.h>
 #endif
 
-#if defined(WIN32)
+#if defined(WIN32) || defined(WIN64)
 # include <windows.h>
 # ifdef small
     /* windows.h define small to char */
 #    undef small
 # endif
 # if defined(_DLL) && !defined(_LIB)
 #   if !defined(BZ_EXPORT)
 #     pragma message( "BZIP compiling as DLL import" ) 
diff --git a/libxml/dict.c b/libxml/dict.c
--- a/libxml/dict.c
+++ b/libxml/dict.c
@@ -43,17 +43,17 @@
 #endif
 
 #include <string.h>
 #ifdef HAVE_STDINT_H
 #include <stdint.h>
 #else
 #ifdef HAVE_INTTYPES_H
 #include <inttypes.h>
-#elif defined(WIN32)
+#elif defined(WIN32) || defined(WIN64)
 typedef unsigned __int32 uint32_t;
 #endif
 #endif
 #include <libxml/tree.h>
 #include <libxml/dict.h>
 #include <libxml/xmlmemory.h>
 #include <libxml/xmlerror.h>
 #include <libxml/globals.h>
diff --git a/libxml/parser.c b/libxml/parser.c
--- a/libxml/parser.c
+++ b/libxml/parser.c
@@ -28,17 +28,17 @@
  * See Copyright for the status of this software.
  *
  * daniel@veillard.com
  */
 
 #define IN_LIBXML
 #include "libxml.h"
 
-#if defined(WIN32) && !defined (__CYGWIN__)
+#if (defined(WIN32) || defined(WIN64)) && !defined (__CYGWIN__)
 #define XML_DIR_SEP '\\'
 #else
 #define XML_DIR_SEP '/'
 #endif
 
 #include <stdlib.h>
 #include <limits.h>
 #include <string.h>
diff --git a/libxml/parserInternals.c b/libxml/parserInternals.c
--- a/libxml/parserInternals.c
+++ b/libxml/parserInternals.c
@@ -5,17 +5,17 @@
  * See Copyright for the status of this software.
  *
  * daniel@veillard.com
  */
 
 #define IN_LIBXML
 #include "libxml.h"
 
-#if defined(WIN32) && !defined (__CYGWIN__)
+#if (defined(WIN32) || defined(WIN64)) && !defined (__CYGWIN__)
 #define XML_DIR_SEP '\\'
 #else
 #define XML_DIR_SEP '/'
 #endif
 
 #include <string.h>
 #ifdef HAVE_CTYPE_H
 #include <ctype.h>
diff --git a/libxml/timsort.h b/libxml/timsort.h
--- a/libxml/timsort.h
+++ b/libxml/timsort.h
@@ -19,17 +19,17 @@ THE SOFTWARE IS PROVIDED "AS IS", WITHOU
 #include <stdlib.h>
 #include <stdio.h>
 #include <string.h>
 #ifdef HAVE_STDINT_H
 #include <stdint.h>
 #else
 #ifdef HAVE_INTTYPES_H
 #include <inttypes.h>
-#elif defined(WIN32)
+#elif defined(WIN32) || defined(WIN64)
 typedef __int64 int64_t;
 typedef unsigned __int64 uint64_t;
 #endif
 #endif
 
 #ifndef MK_UINT64
 #if defined(WIN32) && defined(_MSC_VER) && _MSC_VER < 1300
 #define MK_UINT64(x) ((uint64_t)(x))
diff --git a/xlib/X11_stubs.c b/xlib/X11_stubs.c
--- a/xlib/X11_stubs.c
+++ b/xlib/X11_stubs.c
@@ -30,17 +30,17 @@ in this Software without prior written a
 /*
  *      Xlib.h - Header definition and support file for the C subroutine
  *      interface library (Xlib) to the X Window System Protocol (V11).
  *      Structures and symbols starting with "_" are private to the library.
  */
 #define XlibSpecificationRelease 6
 
 #include <stdlib.h>
-#if !defined(WIN32)
+#if (!defined(WIN32) && !defined(WIN64))
 #include <unistd.h>
 #else
 #if defined(_VISUALC_)
 #       if defined(_MT) && defined(_DLL) && !defined(_LIB)
 #               define MagickExport __declspec(dllexport)
 #       else
 #               define MagickExport
 #       endif
@@ -1344,17 +1344,17 @@ typedef unsigned long    XIMHotKeyState;
 #define XIMHotKeyStateON        (0x0001L)
 #define XIMHotKeyStateOFF       (0x0002L)
 
 typedef struct {
     unsigned short count_values;
     char **supported_values;
 } XIMValuesList;
 
-#if defined(WIN32) && !defined(_XLIBINT_)
+#if (defined(WIN32) || defined(WIN64)) && !defined(_XLIBINT_)
 #define _Xdebug (*_Xdebug_p)
 #endif
 
 int _Xdebug;
 
 #if defined(_VISUALC_)
 extern MagickExport XFontStruct *XLoadQueryFont(
 #else
