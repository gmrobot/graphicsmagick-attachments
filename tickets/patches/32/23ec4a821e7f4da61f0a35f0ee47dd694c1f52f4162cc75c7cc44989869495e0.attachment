# HG changeset patch
# User Dirk Lemstra <dirk@imagemagick.org>
# Date 1409472296 -7200
#      Sun Aug 31 10:04:56 2014 +0200
# Node ID 23239de1b7cdab4f351a00e69e5fcb8e8f532ccf
# Parent  e9edb6e6efa352d7185fb3e39743c13fea704573
Fix loading type-ghostscript.mgk from a resource.
Autolinking for WebP
Fixed compiler warning
'Fix' for VisualStudio code analysis warning

diff --git a/Magick++/lib/Magick++/Include.h b/Magick++/lib/Magick++/Include.h
--- a/Magick++/lib/Magick++/Include.h
+++ b/Magick++/lib/Magick++/Include.h
@@ -124,16 +124,19 @@ namespace MagickLib
 #        endif
 #        if defined(HasTIFF)
 #          pragma comment(lib, "CORE_DB_tiff_.lib")
 #        endif
 #        if defined(HasTTF)
 #          pragma comment(lib, "CORE_DB_ttf_.lib")
 #        endif
 #        pragma comment(lib, "CORE_DB_wand_.lib")
+#        if defined(HasWEBP)
+#          pragma comment(lib, "CORE_DB_webp_.lib")
+#        endif
 #        if defined(HasWMFlite)
 #          pragma comment(lib, "CORE_DB_wmf_.lib")
 #        endif
 #        if defined(HasX11)
 #          pragma comment(lib, "CORE_DB_xlib_.lib")
 #        endif
 #        if defined(HasZLIB)
 #          pragma comment(lib, "CORE_DB_zlib_.lib")
@@ -166,16 +169,19 @@ namespace MagickLib
 #        endif
 #        if defined(HasTIFF)
 #          pragma comment(lib, "CORE_RL_tiff_.lib")
 #        endif
 #        if defined(HasTTF)
 #          pragma comment(lib, "CORE_RL_ttf_.lib")
 #        endif
 #        pragma comment(lib, "CORE_RL_wand_.lib")
+#        if defined(HasWEBP)
+#          pragma comment(lib, "CORE_RL_webp_.lib")
+#        endif
 #        if defined(HasWMFlite)
 #          pragma comment(lib, "CORE_RL_wmf_.lib")
 #        endif
 #        if defined(HasX11)
 #          pragma comment(lib, "CORE_RL_xlib_.lib")
 #        endif
 #        if defined(HasZLIB)
 #          pragma comment(lib, "CORE_RL_zlib_.lib")
diff --git a/Magick++/lib/Magick++/STL.h b/Magick++/lib/Magick++/STL.h
--- a/Magick++/lib/Magick++/STL.h
+++ b/Magick++/lib/Magick++/STL.h
@@ -1779,23 +1779,21 @@ namespace Magick
 	// structure may occur more than once in the container, causing
 	// the linked list to fail.
 	iter->modifyImage();
 
 	MagickLib::Image* current = iter->image();
 
 	current->previous = previous;
 	current->next     = 0;
+	current->scene    = scene++;
 
 	if ( previous != 0)
 	  previous->next = current;
 
-	current->scene=scene;
-	++scene;
-
 	previous = current;
       }
   }
 
   // Remove links added by linkImages. This should be called after the
   // ImageMagick function call has completed to reset the image list
   // back to its pristine un-linked state.
   template <class InputIterator>
diff --git a/magick/common.h b/magick/common.h
--- a/magick/common.h
+++ b/magick/common.h
@@ -9,19 +9,19 @@
 */
 #ifndef _MAGICK_COMMON_H
 #define _MAGICK_COMMON_H
 
 #if defined(__cplusplus) || defined(c_plusplus)
 extern "C" {
 #endif
 
-/**
- ** Borland C++ Builder DLL compilation defines
- **/
+/*
+ * Borland C++ Builder DLL compilation defines
+ */
 #if defined(__BORLANDC__) && defined(_DLL)
 #  pragma message("BCBMagick lib DLL export interface")
 #  define _MAGICKDLL_
 #  define _MAGICKLIB_
 #  undef BuildMagickModules
 #  define SupportMagickModules
 #endif 
 
diff --git a/magick/type.c b/magick/type.c
--- a/magick/type.c
+++ b/magick/type.c
@@ -653,17 +653,23 @@ static unsigned int ReadTypeConfigureFil
         xml=AllocateString(TypeMap);
     }
   else
     {
       /*
         Load subordinate configuration file based on path specified
         by parent configuration file.
       */
-      xml=(char *) FileToBlob(basename,&length,exception);
+      if (IsAccessibleAndNotEmpty(basename))
+        xml=(char *) FileToBlob(basename,&length,exception);
+      else
+        {
+          GetPathComponent(basename,TailPath,path);
+          xml=(char *) GetConfigureBlob(path,keyword,&length,exception);
+        }
       if (xml == (char *) NULL)
         return (False);
     }
 
   token=AllocateString(xml);
   for (q=xml; *q != '\0'; )
   {
     /*
