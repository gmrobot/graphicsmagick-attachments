--- ../src/GraphicsMagick-1.3.12/magick/annotate.c	2009-12-17 02:49:52.000000000 +0800
+++ magick/annotate.c	2011-03-21 09:15:20.000000000 +0800
@@ -1239,34 +1239,55 @@
               continue;
             bitmap=(FT_BitmapGlyph) glyph.image;
             image->storage_class=DirectClass;
-            point.x=offset->x+bitmap->left;
+            if (bitmap->bitmap.pixel_mode == ft_pixel_mode_mono)
+              {
+                point.x=offset->x+(origin.x >> 6);
+              }
+            else
+              {
+                point.x=offset->x+bitmap->left;
+              }
             point.y=offset->y-bitmap->top;
             p=bitmap->bitmap.buffer;
             /* FIXME: OpenMP */
             for (y=0; y < (long) bitmap->bitmap.rows; y++)
             {
+              int pc = y * bitmap->bitmap.pitch;
+              int pcr = pc;
               if ((ceil(point.y+y-0.5) < 0) ||
                   (ceil(point.y+y-0.5) >= image->rows))
                 {
-                  p+=bitmap->bitmap.width;
                   continue;
                 }
               q=GetImagePixels(image,(long) ceil(point.x-0.5),
                 (long) ceil(point.y+y-0.5),bitmap->bitmap.width,1);
               active=q != (PixelPacket *) NULL;
-              for (x=0; x < (long) bitmap->bitmap.width; x++)
+              for (x=0; x < (long) bitmap->bitmap.width; x++, pc++)
               {
-                if (((long) ceil(point.x+x-0.5) < 0) || (*p == 0) ||
+                if (((long) ceil(point.x+x-0.5) < 0) ||
                     ((unsigned long) ceil(point.x+x-0.5) >= image->columns))
-                  {
-                    p++;
+                 {
                     q++;
                     continue;
+                 }
+                // 8-bit gray-level pixmap
+                if (bitmap->bitmap.pixel_mode == ft_pixel_mode_grays)
+                  {
+                    if (draw_info->text_antialias)
+                      opacity=ScaleCharToQuantum(p[pc]);
+                    else
+                      opacity=(p[pc] < 127 ? OpaqueOpacity : TransparentOpacity);
+                  }
+                // 1-bit monochrome bitmap
+                else if (bitmap->bitmap.pixel_mode == ft_pixel_mode_mono)
+                  {
+                    opacity=((p[(x >> 3) + pcr] & (1 << (~x & 0x07))) ?
+                        TransparentOpacity : OpaqueOpacity);
                   }
-                if (draw_info->text_antialias)
-                  opacity=ScaleCharToQuantum(*p);
                 else
-                  opacity=((*p) < 127 ? OpaqueOpacity : TransparentOpacity);
+                  {
+                    continue; // ignore it?
+                  }
                 fill_color=draw_info->fill;
                 if (pattern != (Image *) NULL)
                   (void) AcquireOnePixelByReference(pattern,&fill_color,
@@ -1279,7 +1300,6 @@
                     (long) ceil(point.y+y-0.5),1,1);
                 if (q == (PixelPacket *) NULL)
                   {
-                    p++;
                     q++;
                     continue;
                   }
@@ -1287,7 +1307,6 @@
                                     image->matte ? q->opacity : OpaqueOpacity);
                 if (!active)
                   (void) SyncImagePixels(image);
-                p++;
                 q++;
               }
               (void) SyncImagePixels(image);
